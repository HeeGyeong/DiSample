// Generated by Dagger (https://dagger.dev).
package com.example.disample.dagger;

import com.example.disample.sub.BluePrint;
import com.example.disample.sub.Material;
import com.example.disample.sub.Tool;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BluePrintModule_ProvideBluePrintFactory implements Factory<BluePrint> {
  private final BluePrintModule module;

  private final Provider<Material> materialProvider;

  private final Provider<Tool> toolProvider;

  public BluePrintModule_ProvideBluePrintFactory(BluePrintModule module,
      Provider<Material> materialProvider, Provider<Tool> toolProvider) {
    this.module = module;
    this.materialProvider = materialProvider;
    this.toolProvider = toolProvider;
  }

  @Override
  public BluePrint get() {
    return provideBluePrint(module, materialProvider.get(), toolProvider.get());
  }

  public static BluePrintModule_ProvideBluePrintFactory create(BluePrintModule module,
      Provider<Material> materialProvider, Provider<Tool> toolProvider) {
    return new BluePrintModule_ProvideBluePrintFactory(module, materialProvider, toolProvider);
  }

  public static BluePrint provideBluePrint(BluePrintModule instance, Material material, Tool tool) {
    return Preconditions.checkNotNullFromProvides(instance.provideBluePrint(material, tool));
  }
}
