// Generated by Dagger (https://dagger.dev).
package com.example.disample.dagger;

import com.example.disample.sub.Material;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TestModule_ProvideMaterialFactory implements Factory<Material> {
  private final TestModule module;

  public TestModule_ProvideMaterialFactory(TestModule module) {
    this.module = module;
  }

  @Override
  public Material get() {
    return provideMaterial(module);
  }

  public static TestModule_ProvideMaterialFactory create(TestModule module) {
    return new TestModule_ProvideMaterialFactory(module);
  }

  public static Material provideMaterial(TestModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideMaterial());
  }
}
