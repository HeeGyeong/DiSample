// Generated by Dagger (https://dagger.dev).
package com.example.disample.dagger;

import com.example.disample.sub.BluePrint;
import com.example.disample.view.SubActivity;
import com.example.disample.view.SubActivity_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerTestComponent implements TestComponent {
  private final TestModule testModule;

  private DaggerTestComponent(TestModule testModuleParam) {
    this.testModule = testModuleParam;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static TestComponent create() {
    return new Builder().build();
  }

  private BluePrint bluePrint() {
    return TestModule_ProvideBluePrintFactory.provideBluePrint(testModule, TestModule_ProvideMaterialFactory.provideMaterial(testModule), TestModule_ProvideToolFactory.provideTool(testModule));
  }

  @Override
  public void inject(SubActivity activity) {
    injectSubActivity(activity);
  }

  private SubActivity injectSubActivity(SubActivity instance) {
    SubActivity_MembersInjector.injectBluePrint(instance, bluePrint());
    return instance;
  }

  public static final class Builder {
    private TestModule testModule;

    private Builder() {
    }

    public Builder testModule(TestModule testModule) {
      this.testModule = Preconditions.checkNotNull(testModule);
      return this;
    }

    public TestComponent build() {
      if (testModule == null) {
        this.testModule = new TestModule();
      }
      return new DaggerTestComponent(testModule);
    }
  }
}
