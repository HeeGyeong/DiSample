// Generated by Dagger (https://dagger.dev).
package com.example.disample.view;

import com.example.disample.sub.HiltDataController;
import com.example.disample.sub.HiltDataSource;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HiltActivity_MembersInjector implements MembersInjector<HiltActivity> {
  private final Provider<HiltDataSource> dataSourceProvider;

  private final Provider<HiltDataController> controllerProvider;

  public HiltActivity_MembersInjector(Provider<HiltDataSource> dataSourceProvider,
      Provider<HiltDataController> controllerProvider) {
    this.dataSourceProvider = dataSourceProvider;
    this.controllerProvider = controllerProvider;
  }

  public static MembersInjector<HiltActivity> create(Provider<HiltDataSource> dataSourceProvider,
      Provider<HiltDataController> controllerProvider) {
    return new HiltActivity_MembersInjector(dataSourceProvider, controllerProvider);
  }

  @Override
  public void injectMembers(HiltActivity instance) {
    injectDataSource(instance, dataSourceProvider.get());
    injectController(instance, controllerProvider.get());
  }

  @InjectedFieldSignature("com.example.disample.view.HiltActivity.dataSource")
  public static void injectDataSource(HiltActivity instance, HiltDataSource dataSource) {
    instance.dataSource = dataSource;
  }

  @InjectedFieldSignature("com.example.disample.view.HiltActivity.controller")
  public static void injectController(HiltActivity instance, HiltDataController controller) {
    instance.controller = controller;
  }
}
